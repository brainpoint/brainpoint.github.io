(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{364:function(e,t,r){var content=r(365);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,r(7).default)("5c57b664",content,!0,{sourceMap:!1})},365:function(e,t,r){(t=r(6)(!1)).push([e.i,".notify-title{margin-left:25px;margin-bottom:-10px;margin-top:10px;color:#8e8e8e}.notify-broad{min-height:50px;background:#f1f1f1;border-radius:10px;margin:20px;padding:10px;word-break:break-all}.notify-broad i{color:#8e8e8e;margin-top:5px;display:block}.dialog-left .febsui-dialog-container .febsui-dialog-content{text-align:left;white-space:nowrap}",""]),e.exports=t},521:function(e,t,r){"use strict";r.r(t);r(0);var n=r(32),l=r(13),o=(r(364),{layout:"demo",components:l.a,data:function(){return{utils:l.f,api:l.b}},computed:Object(n.b)({}),created:function(){this.timer=new l.f.timer},beforeDestroy:function(){this.timer.dispose(),this.timer=null},asyncData:function(){},beforeMount:function(){},mounted:function(){},methods:{viewWillAppear:function(){l.f.navbar.setBarTitle("事件"),l.f.navbar.setBarHidden(!1)},viewWillDisappear:function(){}}}),c=r(2),component=Object(c.a)(o,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{style:{}},[r("table-view",{attrs:{"table-title":"事件列表(以下前两个事件必须处理)"}},[r("table-view-cell",{attrs:{nextArrow:!0},on:{click:function(){e.api.dialog.alert({cssClass:"dialog-left",contentHtml:"菜单初始化事件; 返回各页面的菜单和参数数组; <br>&nbsp;&nbsp;- keepalive: 默认为true; 使用页面的 activated, deactivated 生命钩子会触发<br>\n&nbsp;&nbsp;- params: 将通过pageProps属性传递给指定的子页面;<br><br>&nbsp;&nbsp;- noPage: 是否无页面; (仅做pageChanged 事件.)<br><br>resolve([<br>{params:{}, menu:'menu1', menuClass:'', keepalive: true, noPage:false},<br>&nbsp;&nbsp;&nbsp;&nbsp;{params:{}, menu:'menu1', menuClass:'', keepalive: false}<br> ...]);"})}}},[r("table-view-cell-center",[e._v("menuLoading")]),e._v(" "),r("table-view-cell-right",[e._v("(resolve)=>{}")])],1),e._v(" "),r("table-view-cell",{attrs:{nextArrow:!0},on:{click:function(){e.api.dialog.alert({cssClass:"dialog-left",contentHtml:"加载页面事件; 使用webpack.require 代码分割方式加载; <br>require([])中需使用常量, 否则无分包效果.<br><br>switch(pageIndex) {<br> case 0:<br><pre>   require(['../page1'],resolve, reject);</pre><pre>   break;</pre>default:<br><pre>  reject('404');</pre><pre>  break;</pre>}<br>"})}}},[r("table-view-cell-center",[e._v("pageLoading")]),e._v(" "),r("table-view-cell-right",[e._v("(resolve, reject, pageIndex)=>{}")])],1),e._v(" "),r("table-view-cell",{attrs:{nextArrow:!0},on:{click:function(){e.api.dialog.alert({cssClass:"dialog-left",contentHtml:"当前选择的页面的回调"})}}},[r("table-view-cell-center",[e._v("pageChanged")]),e._v(" "),r("table-view-cell-right",[e._v("(pageIndex)=>{}")])],1)],1)],1)}),[],!1,null,null,null);t.default=component.exports}}]);